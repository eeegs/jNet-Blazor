// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace jNet.Autoform
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\sscot\OneDrive\Development Files\Projects\jNet\Experiments\jNet.Blazor\jNet.Autoform\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\sscot\OneDrive\Development Files\Projects\jNet\Experiments\jNet.Blazor\jNet.Autoform\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\sscot\OneDrive\Development Files\Projects\jNet\Experiments\jNet.Blazor\jNet.Autoform\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
    public partial class Check : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 9 "C:\Users\sscot\OneDrive\Development Files\Projects\jNet\Experiments\jNet.Blazor\jNet.Autoform\Check.razor"
       


    private ElementReference inputElement { get; set; }

    private bool? _value;

    [Parameter]
    public bool Tristate { get; set; } = true;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool? Value
    {
        get => _value; set
        {
            if (_value != value)
            {
                _value = value;
                ValueChanged.InvokeAsync(_value);
            }
        }
    }

    [Parameter]
    public EventCallback<bool?> ValueChanged { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await SetElementProperty(jsRuntime, inputElement, "indeterminate", Value == null);
        await base.OnAfterRenderAsync(firstRender);
    }

    private void OnChange(ChangeEventArgs e)
    {
        Value = _value switch
        {
            null => true,
            true => false,
            false => Tristate ? null : true
        };
    }

    private static async Task SetElementProperty(IJSRuntime jsRuntime, ElementReference element, string property, object value)
    {
        await jsRuntime.InvokeVoidAsync("window.jsinterop.setPropByElement", element, property, value);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
    }
}
#pragma warning restore 1591
