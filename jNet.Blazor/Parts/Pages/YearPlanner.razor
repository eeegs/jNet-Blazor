@using System.Linq
@using System.Globalization;

<h3>YearPlanner</h3>

<div class="planner-year">
    <div class="planner-month heading">
        <div class="planner-day heading">@($"{year:0000}")</div>
        @for (int i = 0; i < 31; i++)
        {
            <div class="planner-day">@(i+1)</div>
        }
    </div>
    @for (int m = 0; m < months; m++)
    {
        var mnth = new DateTime(year, m + 1, 1);
        var oset = (int)mnth.DayOfWeek - startday;
        var dim = DateTime.DaysInMonth(year, m + 1);

<div class="planner-month">
    <div class="planner-day heading">@mnth.ToString("yyyy-MMM")</div>
    @for (int d = 0; d < dim; d++)
    {
        var day = mnth.AddDays(d);
        var i = d + oset;
        if (day.DayOfWeek == we1 || day.DayOfWeek == we2)
        {
            <div class="planner-day wend">
                <span>
                    @day.DayOfWeek.ToString()[0..1]
                </span>
            </div>
        }
        else
        {
            <div class="planner-day">
                <span>
                    @day.DayOfWeek.ToString()[0..1]
                </span>
            </div>
        }
    }
</div>
    }
</div>

@code {
    private int year;
    private int month;
    private int startday;
    private int months = 12;
    private DayOfWeek we1;
    private DayOfWeek we2;
    private bool dateset = false;

    [Parameter]
    public DateTime StartMonth
    {
        get => new DateTime(year, month, 1);
        set
        {
            year = value.Year;
            month = value.Month;
            dateset = true;
            SetStartDay();
        }
    }

    [Parameter]
    public int Months
    {
        get => months;
        set
        {
            months = value; SetStartDay();
        }
    }

    private void SetStartDay()
    {
        if (months > 0)
        {
            startday = Enumerable.Range(0, months).Min(q => (int)(new DateTime(year, q + 1, 1).DayOfWeek));
        }
    }

    public YearPlanner()
    {
        var a = (int)CultureInfo.CurrentCulture.DateTimeFormat.FirstDayOfWeek;
        we1 = (DayOfWeek)((a + 6) % 7);
        we2 = (DayOfWeek)((a + 7) % 7);
    }



    protected override void OnParametersSet()
    {
        if (!dateset)
        {
            StartMonth = DateTime.Now;
        }
        base.OnParametersSet();
    }
}
